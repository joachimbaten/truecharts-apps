# Include{groups}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
# Include{global}
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "statefulset"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "RollingUpdate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}
  - variable: secret
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      type: dict
      attrs:
        - variable: LDAP_READONLY_USER_USERNAME
          label: "LDAP_READONLY_USER_USERNAME"
          schema:
            type: string
            required: true
            default: "readonly"
        - variable: LDAP_READONLY_USER_PASSWORD
          label: "LDAP_READONLY_USER_PASSWORD"
          schema:
            type: string
            required: true
            private: true
            default: "REPLACETHIS"
        - variable: LDAP_ADMIN_PASSWORD
          label: "LDAP_ADMIN_PASSWORD"
          schema:
            type: string
            required: true
            private: true
            default: "REPLACETHIS"
        - variable: LDAP_CONFIG_PASSWORD
          label: "LDAP_CONFIG_PASSWORD"
          schema:
            type: string
            required: true
            private: true
            default: "REPLACETHIS"
  - variable: env
    group: "App Configuration"
    label: "Image Environment"
    schema:
      type: dict
      attrs:
# Include{fixedEnv}
        - variable: LDAP_LOG_LEVEL
          label: "LDAP_LOG_LEVEL"
          schema:
            type: int
            required: true
            default: 256
        - variable: LDAP_ORGANISATION
          label: "LDAP_ORGANISATION"
          schema:
            type: string
            required: true
            default: "Example Company or Household"
        - variable: LDAP_DOMAIN
          label: "LDAP_DOMAIN"
          schema:
            type: string
            required: true
            default: "example.org"
        - variable: LDAP_READONLY_USER
          label: "LDAP_READONLY_USER"
          schema:
            type: boolean
            default: false
        - variable: LDAP_RFC2307BIS_SCHEMA
          label: "LDAP_RFC2307BIS_SCHEMA"
          schema:
            type: boolean
            default: false
        - variable: LDAP_BACKEND
          label: "LDAP_BACKEND"
          schema:
            type: string
            required: true
            default: "mdb"
        - variable: LDAP_TLS
          label: "LDAP_TLS"
          schema:
            type: boolean
            default: true
        - variable: LDAP_TLS_ENFORCE
          label: "LDAP_TLS_ENFORCE"
          schema:
            type: boolean
            default: false
        - variable: LDAP_TLS_VERIFY_CLIENT
          label: "LDAP_TLS_VERIFY_CLIENT"
          schema:
            type: string
            required: true
            default: "never"
        - variable: LDAP_TLS_PROTOCOL_MIN
          label: "LDAP_TLS_PROTOCOL_MIN"
          schema:
            type: string
            required: true
            default: "3.0"
        - variable: LDAP_TLS_CIPHER_SUITE
          label: "LDAP_TLS_CIPHER_SUITE"
          schema:
            type: string
            required: true
            default: "NORMAL"
        - variable: LDAP_TLS_REQCERT
          label: "LDAP_TLS_REQCERT"
          schema:
            type: string
            required: true
            default: "never"
        - variable: CONTAINER_LOG_LEVEL
          label: "CONTAINER_LOG_LEVEL"
          schema:
            type: int
            required: true
            default: 4
        - variable: KEEP_EXISTING_CONFIG
          label: "KEEP_EXISTING_CONFIG"
          schema:
            type: boolean
            default: false
        - variable: LDAP_REMOVE_CONFIG_AFTER_SETUP
          label: "LDAP_REMOVE_CONFIG_AFTER_SETUP"
          schema:
            type: boolean
            default: true
        - variable: LDAP_SSL_HELPER_PREFIX
          label: "LDAP_SSL_HELPER_PREFIX"
          schema:
            type: string
            required: true
            default: "ldap"
        - variable: LDAP_BASE_DN
          label: "LDAP_BASE_DN"
          schema:
            type: string
            required: true
            default: ""

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 389
                              editable: true
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "TCP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 389


        - variable: ldaps
          label: "ldaps Service"
          description: "The ldaps service"
          schema:
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: ldaps
                      label: "ldaps Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: enabled
                            label: "Enable the port"
                            schema:
                              type: boolean
                              default: true
                              hidden: true
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 636
                              editable: true
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "TCP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 636

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: volumeClaimTemplates
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      type: dict
      attrs:
        - variable: data
          label: "App Data Storage"
          description: "Stores the Application Data."
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the storage"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "pvc"
                      description: "pvc"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: mountPath
                label: "mountPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  type: string
                  default: "/var/lib/ldap/"
                  hidden: true
                  valid_chars: '^\/([a-zA-Z0-9._-]+(\s?[a-zA-Z0-9._-]+|\/?))+$'
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}
        - variable: slapd
          label: "App slapd Storage"
          description: "Stores the Application slapd."
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the storage"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "pvc"
                      description: "pvc"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: mountPath
                label: "mountPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  type: string
                  default: "/etc/ldap/slapd.d/"
                  hidden: true
                  valid_chars: '^\/([a-zA-Z0-9._-]+(\s?[a-zA-Z0-9._-]+|\/?))+$'
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}

# Include{persistenceList}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
        - variable: supplementalGroups
          label: "supplemental Groups"
          schema:
            type: list
            default: []
            items:
              - variable: supplementalGroupsEntry
                label: "supplemental Group"
                schema:
                  type: int
        - variable: fsGroupChangePolicy
          label: "When should we take ownership?"
          schema:
            type: string
            default: "OnRootMismatch"
            enum:
              - value: "OnRootMismatch"
                description: "OnRootMismatch"
              - value: "Always"
                description: "Always"
# Include{resources}

# Include{advanced}

# Include{addons}
